/***************************************************************************
This file is part of Project Apollo - NASSP
Copyright 2023

Lunar Module Landing Radar (Header)

Project Apollo is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

Project Apollo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Project Apollo; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

See http://nassp.sourceforge.net/license/ for more details.

**************************************************************************/

#pragma once

class LEM_LR : public e_object {
public:
	LEM_LR();
	void Init(LEM *s, e_object *dc_src, h_Radiator *ant, Boiler *anheat, h_HeatLoad *hl);
	void SaveState(FILEHANDLE scn, char *start_str, char *end_str);
	void LoadState(FILEHANDLE scn, char *end_str);
	void Timestep(double simdt);
	void SystemTimestep(double simdt);
	double GetAntennaTempF();
	bool IsRangeDataGood() { return rangeGood == 1; };
	bool IsVelocityDataGood() { return velocityGood == 1; };
	double GetAltitude() { return range * 0.3048; };
	double GetAltitudeRate() { return rate[0] * 0.3048; };
	void GetRangeLGC();
	void GetVelocityXLGC();
	void GetVelocityYLGC();
	void GetVelocityZLGC();
	double GetAltTransmitterPower();
	double GetVelTransmitterPower();

	bool IsPowered();

	LEM *lem;					// Pointer at LEM
	h_Radiator *antenna;		// Antenna (loses heat into space)
	Boiler *antheater;			// Antenna Heater (puts heat back into antenna)
	h_HeatLoad *lrheat;			// Heat generated by operation
	e_object *dc_source;		// Source of DC power
	double range;				// Range in feet
	double rate[3];				// Velocity X/Y/Z in feet/second
	double antennaAngle;		// Antenna angle
	int rangeGood;				// RDG flag
	int velocityGood;			// VDG flag
};